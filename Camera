import numpy as np
import cv2 as cv

def detect_dominant_color(roi):
    # Reshape the ROI to a 2D array of pixels
    pixels = roi.reshape((-1, 3))
    
    # Convert to float32
    pixels = np.float32(pixels)
    
    # Define criteria and apply kmeans()
    criteria = (cv.TERM_CRITERIA_EPS + cv.TERM_CRITERIA_MAX_ITER, 10, 1.0)
    _, _, centers = cv.kmeans(pixels, 1, None, criteria, 10, cv.KMEANS_RANDOM_CENTERS)
    
    # Convert back to uint8 and return the dominant color
    dominant_color = np.uint8(centers[0])
    return dominant_color

def get_color_name(color):
    # Define color ranges and their corresponding names
    color_ranges = {
        'Red': ((255, 255, 255), (255, 255, 255)),  # Define the range for red color
        'Green': ((255, 255, 255), (255, 255, 255)),  # Define the range for green color
        'Blue': ((255, 255, 255), (255, 255, 255)),  # Define the range for blue color
        'Black': ((0, 0, 0), (254, 25, 57)),  # Define the range for black color
        # Add more color ranges as needed
    }
    
    # Check if the detected color falls within any defined range
    for name, (lower, upper) in color_ranges.items():
        if np.all(color >= lower) and np.all(color <= upper):
            return name
    
    return "Unknown"  # If the color doesn't match any defined range, return "Unknown"


cap = cv.VideoCapture(1)
if not cap.isOpened():
    print("Cannot open camera")
    exit()

while True:
    # Capture frame-by-frame
    ret, frame = cap.read()
    
    # if frame is read correctly ret is True
    if not ret:
        print("IDK")
        break
    
    # Convert frame to grayscale
    gray = cv.cvtColor(frame, cv.COLOR_BGR2GRAY)
    
    # Display the grayscale frame
    cv.imshow('frame', gray)
    
    # Select ROI
    roi = cv.selectROI('Select ROI', frame)
    
    # Crop the selected ROI from the frame
    x, y, w, h = roi
    roi = frame[y:y+h, x:x+w]
    
    # Detect dominant color in the ROI
    dominant_color = detect_dominant_color(roi)
    
    # Get the name of the detected color
    color_name = get_color_name(dominant_color)
    
    # Display the dominant color and its name
    dominant_color_display = np.full((100, 100, 3), dominant_color, dtype=np.uint8)
    cv.imshow('Dominant Color', dominant_color_display)
    if unknown_color:
        print("Dominant Color:", "Unknown")
    else:
        print("Dominant Color:", color_name)

# When everything done, release the capture and video writer
cap.release()
cv.destroyAllWindows()
